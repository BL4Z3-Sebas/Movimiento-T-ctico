package vista;

import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import modelo.Circulo;
import static modelo.Formaciones.s352;
import static modelo.Formaciones.s4231;
import static modelo.Formaciones.s433;
import static modelo.Formaciones.s442;

/**
 *
 * @author Alfonso
 */
public class pnlJugadores extends javax.swing.JPanel {

    /**
     * Creates new form pnlCancha
     */
    ImageIcon lineas = new ImageIcon("imagenes/lineas_blancas.png");
    ArrayList<Circulo> jugadores;

    public pnlJugadores() {
        initComponents();
        jugadores = new ArrayList<>();
        mostraJugadores('d');
        revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        setLayout(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        jugadores.add(new Circulo(evt.getX(), evt.getY(), 20, Color.BLUE));
        this.removeAll();
        System.out.println(evt.getX() + ", " + evt.getY());
        repaint();
    }//GEN-LAST:event_formMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    private void mostraJugadores(char formacion) {
        switch (formacion) {
            case 'a':
                for (int[] pos : s442.getFormacion()) {
                    jugadores.add(new Circulo(pos[0], pos[1], 20, Color.red));
                }
                repaint();
                break;

            case 'b':
                for (int[] pos : s4231.getFormacion()) {
                    jugadores.add(new Circulo(pos[0], pos[1], 20, Color.red));
                }
                repaint();
                break;

            case 'c':
                for (int[] pos : s352.getFormacion()) {
                    jugadores.add(new Circulo(pos[0], pos[1], 20, Color.red));
                }
                repaint();
                break;
                
            case 'd':
                for (int[] pos : s433.getFormacion()) {
                    jugadores.add(new Circulo(pos[0], pos[1], 20, Color.red));
                }
                repaint();
                break;

            default:
                System.out.println("Formación no válida.");
        }
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        for (Circulo jugador : jugadores) {
            jugador.dibujar(g);
        }
    }
}
