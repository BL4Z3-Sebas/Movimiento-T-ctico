package vista;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.util.ArrayList;
import modelo.Circulo;
import modelo.Formaciones;
import static modelo.Formaciones.s352;
import static modelo.Formaciones.s4231;
import static modelo.Formaciones.s433;
import static modelo.Formaciones.s442;

/**
 *
 * @author Alfonso
 */
public class pnlJugadores extends javax.swing.JPanel {

    ArrayList<Circulo> jugadores;
    int[][] matriz_adyacencia;

    /**
     * Creates new form pnlCancha
     */
    public pnlJugadores() {
        initComponents();
        jugadores = new ArrayList<>();
        revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(null);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        for (Circulo jugador : jugadores) {
            dibujarEquipo(g);
        }
    }

    private void crearCirculos(Formaciones formacion) {
        for (int[] pos : formacion.getFormacion()) {
            jugadores.add(new Circulo(pos[0], pos[1], 15, Color.BLUE));
        }
    }

    public void mostraJugadores(int formacion) {
        jugadores.clear();
        switch (formacion) {
            case 442:
                crearCirculos(s442);
                break;

            case 4231:
                crearCirculos(s4231);
                break;

            case 352:
                crearCirculos(s352);
                break;

            case 433:
                crearCirculos(s433);
                break;

            default:
                System.out.println("Formación no válida.");
        }
        repaint();
    }

    public void dibujarEquipo(Graphics g) {
        Graphics2D g2 = (Graphics2D) g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        g2.setStroke(new BasicStroke(2));
        for (int i = 0; i < 11; i++) {
            Circulo c1 = jugadores.get(i);
            g2.setColor(new Color(255, 219, 54));
            for (int j = i; j < 11; j++) {
                Circulo c2 = jugadores.get(j);
                if (matriz_adyacencia[i][j] == 1) {
                    g2.drawLine(c1.getX(), c1.getY(), c2.getX(), c2.getY());
                }
            }
            c1.dibujar(g);
        }
    }

}
